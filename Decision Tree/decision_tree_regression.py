# -*- coding: utf-8 -*-
"""decision_tree_regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yu5Gju1ws_83SBQYWRIieJKheiMsQaSL

# Decision Tree Regression

## Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

"""## Importing the dataset"""

dataset = pd.read_csv('Data.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

"""## Training the Decision Tree Regression model on the Training set"""

from sklearn.tree import DecisionTreeRegressor
regressor = DecisionTreeRegressor(random_state = 0)
regressor.fit(X_train, y_train)

"""## Predicting the Test set results"""

y_pred = regressor.predict(X_test)
np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

"""## Evaluating and Displaying the Model Performance"""

from sklearn.metrics import r2_score
r2 = r2_score(y_test, y_pred)
n = X_test.shape[0]   # number of test samples
k = X_test.shape[1]   # number of features
adjusted_r2 = 1 - ((1 - r2) * (n - 1) / (n - k - 1))
print(f"R² Score: {r2:.4f}")
print(f"Adjusted R² Score: {adjusted_r2:.4f}")

"""## Visualising the Decision Tree Regression results (higher resolution)"""

plt.figure(figsize=(10,4))
plt.plot(y_test[:50], label='Actual', marker='o')
plt.plot(y_pred[:50], label='Predicted', marker='x')
plt.xlabel('Test Sample Index')
plt.ylabel('Power Output (PE)')
plt.title('Trend Comparison of Actual vs Predicted')
plt.legend()
plt.grid(True)
plt.show()
